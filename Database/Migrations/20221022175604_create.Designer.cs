// <auto-generated />
using System;
using Database.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Database.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20221022175604_create")]
    partial class create
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Database.Entities.Bills", b =>
                {
                    b.Property<string>("bill_Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("bill_Cancel")
                        .HasColumnType("bit");

                    b.Property<DateTime>("bill_StartDateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("bill_StatusPayment")
                        .HasColumnType("bit");

                    b.Property<bool>("bill_StatusReviceOrder")
                        .HasColumnType("bit");

                    b.Property<double>("bill_Total")
                        .HasColumnType("float");

                    b.Property<string>("bill_UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("bill_Id");

                    b.HasIndex("bill_UserId");

                    b.ToTable("Bills", (string)null);

                    b.HasData(
                        new
                        {
                            bill_Id = "9d0933e3-f9db-4a38-b6d4-b5a6b8935c88",
                            bill_Cancel = false,
                            bill_StartDateTime = new DateTime(2022, 10, 23, 0, 56, 3, 900, DateTimeKind.Local).AddTicks(3813),
                            bill_StatusPayment = true,
                            bill_StatusReviceOrder = false,
                            bill_Total = 1000000.0,
                            bill_UserId = "8b3e6a69-6154-4a41-98c8-327dbfbf5ef8"
                        });
                });

            modelBuilder.Entity("Database.Entities.IntroducePage", b =>
                {
                    b.Property<string>("introduce_Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("introduce_Address1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("introduce_Address2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("introduce_Address3")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("introduce_Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("introduce_Map1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("introduce_Map2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("introduce_Map3")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("introduce_Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("introduce_UserCreate")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("introduce_Zalo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("introduce_Id");

                    b.HasIndex("introduce_UserCreate");

                    b.ToTable("IntroducePage", (string)null);

                    b.HasData(
                        new
                        {
                            introduce_Id = "defaultPage",
                            introduce_Address1 = "180 Bui Van Ba, District 7, Ho Chi Minh City.",
                            introduce_Address2 = "464 Cong Hoa, Tan Binh District, Ho Chi Minh City.",
                            introduce_Address3 = "157/13 Luong The Vinh Street, Ward 1, Ca Mau City.",
                            introduce_Email = "petshop.cuahangthucung@gmail.com",
                            introduce_Map1 = "180 Bui Van Ba, District 7, Ho Chi Minh City .",
                            introduce_Map2 = "464 Cong Hoa, Ward 13, Tan Binh District, City Ho Chi Minh.",
                            introduce_Map3 = "157/13 Luong The Vinh Street, Ward 1, City Ca Mau.",
                            introduce_Phone = "0812888858",
                            introduce_UserCreate = "8b3e6a69-6154-4a41-98c8-327dbfbf5ef8",
                            introduce_Zalo = "0812888858"
                        });
                });

            modelBuilder.Entity("Database.Entities.PetCategories", b =>
                {
                    b.Property<string>("pc_Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("pc_Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("pc_IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("pc_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("pc_Id");

                    b.ToTable("PetCategories", (string)null);

                    b.HasData(
                        new
                        {
                            pc_Id = "56b58303-c5c4-462f-80f2-84f29696ce70",
                            pc_Description = "Ikita Inu",
                            pc_IsDelete = false,
                            pc_Name = "Ikita Inu"
                        },
                        new
                        {
                            pc_Id = "dc5da4e8-008d-4f6a-85f3-d1e4a24fecfd",
                            pc_Description = "Alaska",
                            pc_IsDelete = false,
                            pc_Name = "Alaska"
                        },
                        new
                        {
                            pc_Id = "5546cb37-d084-4afb-ba89-89bd52b192d3",
                            pc_Description = "Vitespitz",
                            pc_IsDelete = false,
                            pc_Name = "Vitespitz"
                        },
                        new
                        {
                            pc_Id = "5f3a507a-c641-47cf-8b63-fb1777f5f10f",
                            pc_Description = "Pekingese",
                            pc_IsDelete = false,
                            pc_Name = "Pekingese"
                        },
                        new
                        {
                            pc_Id = "19f5639e-c952-483c-ab48-e187f4501fa0",
                            pc_Description = "Becgie Germany",
                            pc_IsDelete = false,
                            pc_Name = "Becgie Germany"
                        },
                        new
                        {
                            pc_Id = "25dff836-f046-4bbd-857d-0632bc47b03c",
                            pc_Description = "Border collie",
                            pc_IsDelete = false,
                            pc_Name = "Border collie"
                        },
                        new
                        {
                            pc_Id = "d9b7e433-6eac-496e-aae0-e6cc52d10345",
                            pc_Description = "Bulldog",
                            pc_IsDelete = false,
                            pc_Name = "Bulldog"
                        },
                        new
                        {
                            pc_Id = "099765d7-e234-420a-8d29-f395c112bfec",
                            pc_Description = "Bully American",
                            pc_IsDelete = false,
                            pc_Name = "Bully American"
                        },
                        new
                        {
                            pc_Id = "ad6a9e3b-2dc9-4ed9-a5c2-1f5649e442a7",
                            pc_Description = "Chihuahua",
                            pc_IsDelete = false,
                            pc_Name = "Chihuahua"
                        },
                        new
                        {
                            pc_Id = "d1d05b94-ba26-4a62-b262-b3d6a383d4f1",
                            pc_Description = "Dalmatian",
                            pc_IsDelete = false,
                            pc_Name = "Dalmatian"
                        },
                        new
                        {
                            pc_Id = "a533a2ac-1c8a-4d7a-b15b-45485724c917",
                            pc_Description = "Japan Dog",
                            pc_IsDelete = false,
                            pc_Name = "Japan Dog"
                        },
                        new
                        {
                            pc_Id = "da2ce7a5-1f08-4215-9680-0c7dca51ae24",
                            pc_Description = "Chow Chow",
                            pc_IsDelete = false,
                            pc_Name = "Chow Chow"
                        },
                        new
                        {
                            pc_Id = "5685b4c8-5828-4093-bf36-f7208e970ff9",
                            pc_Description = "Cocker Spaniel",
                            pc_IsDelete = false,
                            pc_Name = "Cocker Spaniel"
                        },
                        new
                        {
                            pc_Id = "ca49f1b8-5351-4220-af91-4765cca8cbbb",
                            pc_Description = "Corgi",
                            pc_IsDelete = false,
                            pc_Name = "Corgi"
                        },
                        new
                        {
                            pc_Id = "aec76309-5516-479e-a8ee-34fcf2d90bbc",
                            pc_Description = "Dobermann",
                            pc_IsDelete = false,
                            pc_Name = "Dobermann"
                        },
                        new
                        {
                            pc_Id = "39e83b15-2491-4809-adfe-74ac2a47f898",
                            pc_Description = "Golden Retriever",
                            pc_IsDelete = false,
                            pc_Name = "Golden Retriever"
                        },
                        new
                        {
                            pc_Id = "7e785ec4-8e30-4b7e-8fba-450e48f030ac",
                            pc_Description = "Great Dane",
                            pc_IsDelete = false,
                            pc_Name = "Great Dane"
                        },
                        new
                        {
                            pc_Id = "67bd9ef9-c200-4bec-89db-61a37ded4f80",
                            pc_Description = "H'Mong Coc",
                            pc_IsDelete = false,
                            pc_Name = "H'Mong Coc"
                        },
                        new
                        {
                            pc_Id = "02986abe-8aaa-498c-b942-8a0fcaf16af1",
                            pc_Description = "Husky",
                            pc_IsDelete = false,
                            pc_Name = "Husky"
                        },
                        new
                        {
                            pc_Id = "8c253cca-7e46-4102-8304-db9370ae3b60",
                            pc_Description = "Labrador",
                            pc_IsDelete = false,
                            pc_Name = "Labrador"
                        },
                        new
                        {
                            pc_Id = "5d7e5f3e-00c2-46c9-9a37-9bd0100f1b53",
                            pc_Description = "Sausage",
                            pc_IsDelete = false,
                            pc_Name = "Sausage"
                        },
                        new
                        {
                            pc_Id = "313cc446-898f-4476-9c7e-8b0d65a7610a",
                            pc_Description = "Malinois",
                            pc_IsDelete = false,
                            pc_Name = "Malinois"
                        },
                        new
                        {
                            pc_Id = "5e4bdbbb-b1c2-437c-b781-c682b35f66bb",
                            pc_Description = "Tibetan Clams",
                            pc_IsDelete = false,
                            pc_Name = "Tibetan Clams"
                        },
                        new
                        {
                            pc_Id = "b38071da-10aa-4be9-b8ed-ec056cfa0866",
                            pc_Description = "Pho Deer",
                            pc_IsDelete = false,
                            pc_Name = "Pho Deer"
                        },
                        new
                        {
                            pc_Id = "76f94dba-7cfc-4500-9da4-1df7e2026cb3",
                            pc_Description = "Phoc Soc",
                            pc_IsDelete = false,
                            pc_Name = "Phoc Soc"
                        },
                        new
                        {
                            pc_Id = "704d453c-3a33-4094-a195-ed83e70ee8b5",
                            pc_Description = "Phu Quoc",
                            pc_IsDelete = false,
                            pc_Name = "Phu Quoc"
                        },
                        new
                        {
                            pc_Id = "b02b08bf-f4f6-4e5b-99a3-6a6e23370b74",
                            pc_Description = "Pitbull",
                            pc_IsDelete = false,
                            pc_Name = "Pitbull"
                        },
                        new
                        {
                            pc_Id = "940aface-2c15-466f-a341-25f8582c8b2f",
                            pc_Description = "Poodle",
                            pc_IsDelete = false,
                            pc_Name = "Poodle"
                        },
                        new
                        {
                            pc_Id = "23d8f287-0f82-4e71-9204-a7007306af21",
                            pc_Description = "Pug",
                            pc_IsDelete = false,
                            pc_Name = "Pug"
                        },
                        new
                        {
                            pc_Id = "6e6a85e7-ec28-47a2-bfec-6f4764bfc125",
                            pc_Description = "Rottweiler",
                            pc_IsDelete = false,
                            pc_Name = "Rottweiler"
                        },
                        new
                        {
                            pc_Id = "35099697-853c-4f6f-8b89-386b68f59d91",
                            pc_Description = "Samoyed",
                            pc_IsDelete = false,
                            pc_Name = "Samoyed"
                        },
                        new
                        {
                            pc_Id = "007de5e2-6ef8-4797-a530-98d901fa8c57",
                            pc_Description = "Shiba Inu",
                            pc_IsDelete = false,
                            pc_Name = "Shiba Inu"
                        });
                });

            modelBuilder.Entity("Database.Entities.Pets", b =>
                {
                    b.Property<string>("pet_Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("pet_CategoryId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("pet_Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pet_Image1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pet_Image2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pet_Image3")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pet_Image4")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pet_Image5")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("pet_IsDelete")
                        .HasColumnType("bit");

                    b.Property<double>("pet_Lifespan")
                        .HasColumnType("float");

                    b.Property<string>("pet_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pet_Origin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pet_OrtherName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("pet_Price")
                        .HasColumnType("float");

                    b.Property<double>("pet_Weight")
                        .HasColumnType("float");

                    b.HasKey("pet_Id");

                    b.HasIndex("pet_CategoryId");

                    b.ToTable("Pets", (string)null);

                    b.HasData(
                        new
                        {
                            pet_Id = "50740204-b161-498d-ace9-0fa591b6d8f2",
                            pet_CategoryId = "56b58303-c5c4-462f-80f2-84f29696ce70",
                            pet_Description = "AKITA INU",
                            pet_Image1 = "image/giongcho/akita-inu.jpg",
                            pet_Image2 = "image/giongcho/akita-inu.jpg",
                            pet_Image3 = "image/giongcho/akita-inu.jpg",
                            pet_Image4 = "image/giongcho/akita-inu.jpg",
                            pet_Image5 = "image/giongcho/akita-inu.jpg",
                            pet_IsDelete = false,
                            pet_Lifespan = 1.0,
                            pet_Name = "AKITA INU",
                            pet_Origin = "Origin",
                            pet_OrtherName = "OrtherName",
                            pet_Price = 1.0,
                            pet_Weight = 3.0
                        },
                        new
                        {
                            pet_Id = "84c2ba6a-0be3-45d5-9f11-7483bb0cc867",
                            pet_CategoryId = "56b58303-c5c4-462f-80f2-84f29696ce70",
                            pet_Description = "ALASKA",
                            pet_Image1 = "image/giongcho/alaska.jpg",
                            pet_Image2 = "image/giongcho/alaska.jpg",
                            pet_Image3 = "image/giongcho/alaska.jpg",
                            pet_Image4 = "image/giongcho/alaska.jpg",
                            pet_Image5 = "image/giongcho/alaska.jpg",
                            pet_IsDelete = false,
                            pet_Lifespan = 1.0,
                            pet_Name = "ALASKA",
                            pet_Origin = "Origin",
                            pet_OrtherName = "OrtherName",
                            pet_Price = 1.0,
                            pet_Weight = 3.0
                        },
                        new
                        {
                            pet_Id = "b375a8dc-8c2b-427e-b5d2-401b7ee83554",
                            pet_CategoryId = "56b58303-c5c4-462f-80f2-84f29696ce70",
                            pet_Description = "Vitespitz",
                            pet_Image1 = "image/giongcho/chobacha.png",
                            pet_Image2 = "image/giongcho/chobacha.png",
                            pet_Image3 = "image/giongcho/chobacha.png",
                            pet_Image4 = "image/giongcho/chobacha.png",
                            pet_Image5 = "image/giongcho/chobacha.png",
                            pet_IsDelete = false,
                            pet_Lifespan = 1.0,
                            pet_Name = "Vitespitz",
                            pet_Origin = "Origin",
                            pet_OrtherName = "OrtherName",
                            pet_Price = 1.0,
                            pet_Weight = 3.0
                        },
                        new
                        {
                            pet_Id = "5a4909a1-9823-4b6c-adab-07e63b69d3b1",
                            pet_CategoryId = "56b58303-c5c4-462f-80f2-84f29696ce70",
                            pet_Description = "BECGIE Germany",
                            pet_Image1 = "image/giongcho/becgie-duc.jpg",
                            pet_Image2 = "image/giongcho/becgie-duc.jpg",
                            pet_Image3 = "image/giongcho/becgie-duc.jpg",
                            pet_Image4 = "image/giongcho/becgie-duc.jpg",
                            pet_Image5 = "image/giongcho/becgie-duc.jpg",
                            pet_IsDelete = false,
                            pet_Lifespan = 1.0,
                            pet_Name = "BECGIE Germany",
                            pet_Origin = "Origin",
                            pet_OrtherName = "OrtherName",
                            pet_Price = 1.0,
                            pet_Weight = 3.0
                        },
                        new
                        {
                            pet_Id = "1077a922-5fcc-423b-b3fa-87d6d5d76121",
                            pet_CategoryId = "56b58303-c5c4-462f-80f2-84f29696ce70",
                            pet_Description = "BORDER COLLIE",
                            pet_Image1 = "image/giongcho/BORDER-COLLIE.jpg",
                            pet_Image2 = "image/giongcho/BORDER-COLLIE.jpg",
                            pet_Image3 = "image/giongcho/BORDER-COLLIE.jpg",
                            pet_Image4 = "image/giongcho/BORDER-COLLIE.jpg",
                            pet_Image5 = "image/giongcho/BORDER-COLLIE.jpg",
                            pet_IsDelete = false,
                            pet_Lifespan = 1.0,
                            pet_Name = "BORDER COLLIE",
                            pet_Origin = "Origin",
                            pet_OrtherName = "OrtherName",
                            pet_Price = 1.0,
                            pet_Weight = 3.0
                        },
                        new
                        {
                            pet_Id = "4ef4b172-1baf-422e-9e92-393bfd6fea30",
                            pet_CategoryId = "56b58303-c5c4-462f-80f2-84f29696ce70",
                            pet_Description = "BULLDOG",
                            pet_Image1 = "image/giongcho/bulldog.jpg",
                            pet_Image2 = "image/giongcho/bulldog.jpg",
                            pet_Image3 = "image/giongcho/bulldog.jpg",
                            pet_Image4 = "image/giongcho/bulldog.jpg",
                            pet_Image5 = "image/giongcho/bulldog.jpg",
                            pet_IsDelete = false,
                            pet_Lifespan = 1.0,
                            pet_Name = "BULLDOG",
                            pet_Origin = "Origin",
                            pet_OrtherName = "OrtherName",
                            pet_Price = 1.0,
                            pet_Weight = 3.0
                        },
                        new
                        {
                            pet_Id = "4462abd5-8b57-4cb2-b1e9-d9600814cdfe",
                            pet_CategoryId = "56b58303-c5c4-462f-80f2-84f29696ce70",
                            pet_Description = "BULLY AMERICAN",
                            pet_Image1 = "image/giongcho/bully-american.jpg",
                            pet_Image2 = "image/giongcho/bully-american.jpg",
                            pet_Image3 = "image/giongcho/bully-american.jpg",
                            pet_Image4 = "image/giongcho/bully-american.jpg",
                            pet_Image5 = "image/giongcho/bully-american.jpg",
                            pet_IsDelete = false,
                            pet_Lifespan = 1.0,
                            pet_Name = "BULLY AMERICAN",
                            pet_Origin = "Origin",
                            pet_OrtherName = "OrtherName",
                            pet_Price = 1.0,
                            pet_Weight = 3.0
                        },
                        new
                        {
                            pet_Id = "6e22310d-e93c-402d-876d-9ef0ad62484f",
                            pet_CategoryId = "56b58303-c5c4-462f-80f2-84f29696ce70",
                            pet_Description = "CHIHUAHUA",
                            pet_Image1 = "image/giongcho/chihuahua.jpg",
                            pet_Image2 = "image/giongcho/chihuahua.jpg",
                            pet_Image3 = "image/giongcho/chihuahua.jpg",
                            pet_Image4 = "image/giongcho/chihuahua.jpg",
                            pet_Image5 = "image/giongcho/chihuahua.jpg",
                            pet_IsDelete = false,
                            pet_Lifespan = 1.0,
                            pet_Name = "CHIHUAHUA",
                            pet_Origin = "Origin",
                            pet_OrtherName = "OrtherName",
                            pet_Price = 1.0,
                            pet_Weight = 3.0
                        },
                        new
                        {
                            pet_Id = "ff250da1-fe77-4795-93c4-2713d8a1a67e",
                            pet_CategoryId = "56b58303-c5c4-462f-80f2-84f29696ce70",
                            pet_Description = "Dalmatian",
                            pet_Image1 = "image/giongcho/cho-dom.jpg",
                            pet_Image2 = "image/giongcho/cho-dom.jpg",
                            pet_Image3 = "image/giongcho/cho-dom.jpg",
                            pet_Image4 = "image/giongcho/cho-dom.jpg",
                            pet_Image5 = "image/giongcho/cho-dom.jpg",
                            pet_IsDelete = false,
                            pet_Lifespan = 1.0,
                            pet_Name = "Dalmatian",
                            pet_Origin = "Origin",
                            pet_OrtherName = "OrtherName",
                            pet_Price = 1.0,
                            pet_Weight = 3.0
                        },
                        new
                        {
                            pet_Id = "3e0adabf-0a9d-4727-bef5-48c9dd938d3d",
                            pet_CategoryId = "56b58303-c5c4-462f-80f2-84f29696ce70",
                            pet_Description = "Japan Dog",
                            pet_Image1 = "image/giongcho/chonhatban.png",
                            pet_Image2 = "image/giongcho/chonhatban.png",
                            pet_Image3 = "image/giongcho/chonhatban.png",
                            pet_Image4 = "image/giongcho/chonhatban.png",
                            pet_Image5 = "image/giongcho/chonhatban.png",
                            pet_IsDelete = false,
                            pet_Lifespan = 1.0,
                            pet_Name = "Japan Dog",
                            pet_Origin = "Origin",
                            pet_OrtherName = "OrtherName",
                            pet_Price = 1.0,
                            pet_Weight = 3.0
                        },
                        new
                        {
                            pet_Id = "baa99523-a85c-4d95-ad4c-9312a9b7fc13",
                            pet_CategoryId = "56b58303-c5c4-462f-80f2-84f29696ce70",
                            pet_Description = "CHOW CHOW",
                            pet_Image1 = "image/giongcho/chow-chow.jpg",
                            pet_Image2 = "image/giongcho/chow-chow.jpg",
                            pet_Image3 = "image/giongcho/chow-chow.jpg",
                            pet_Image4 = "image/giongcho/chow-chow.jpg",
                            pet_Image5 = "image/giongcho/chow-chow.jpg",
                            pet_IsDelete = false,
                            pet_Lifespan = 1.0,
                            pet_Name = "CHOW CHOW",
                            pet_Origin = "Origin",
                            pet_OrtherName = "OrtherName",
                            pet_Price = 1.0,
                            pet_Weight = 3.0
                        },
                        new
                        {
                            pet_Id = "dfdb25a6-f912-444a-bbdd-716ae1646cf9",
                            pet_CategoryId = "56b58303-c5c4-462f-80f2-84f29696ce70",
                            pet_Description = "COCKER SPANIEL",
                            pet_Image1 = "image/giongcho/cocker.png",
                            pet_Image2 = "image/giongcho/cocker.png",
                            pet_Image3 = "image/giongcho/cocker.png",
                            pet_Image4 = "image/giongcho/cocker.png",
                            pet_Image5 = "image/giongcho/cocker.png",
                            pet_IsDelete = false,
                            pet_Lifespan = 1.0,
                            pet_Name = "COCKER SPANIEL",
                            pet_Origin = "Origin",
                            pet_OrtherName = "OrtherName",
                            pet_Price = 1.0,
                            pet_Weight = 3.0
                        },
                        new
                        {
                            pet_Id = "f9ef84dd-70c4-42a3-b522-cfd75641e187",
                            pet_CategoryId = "56b58303-c5c4-462f-80f2-84f29696ce70",
                            pet_Description = "CORGI",
                            pet_Image1 = "image/giongcho/corgy.jpg",
                            pet_Image2 = "image/giongcho/corgy.jpg",
                            pet_Image3 = "image/giongcho/corgy.jpg",
                            pet_Image4 = "image/giongcho/corgy.jpg",
                            pet_Image5 = "image/giongcho/corgy.jpg",
                            pet_IsDelete = false,
                            pet_Lifespan = 1.0,
                            pet_Name = "CORGI",
                            pet_Origin = "Origin",
                            pet_OrtherName = "OrtherName",
                            pet_Price = 1.0,
                            pet_Weight = 3.0
                        },
                        new
                        {
                            pet_Id = "e6574ef9-c4f5-4249-8dd6-1e34dbe2a77b",
                            pet_CategoryId = "56b58303-c5c4-462f-80f2-84f29696ce70",
                            pet_Description = "DOBERMANN",
                            pet_Image1 = "image/giongcho/dobermann.jp",
                            pet_Image2 = "image/giongcho/dobermann.jp",
                            pet_Image3 = "image/giongcho/dobermann.jp",
                            pet_Image4 = "image/giongcho/dobermann.jp",
                            pet_Image5 = "image/giongcho/dobermann.jp",
                            pet_IsDelete = false,
                            pet_Lifespan = 1.0,
                            pet_Name = "DOBERMANN",
                            pet_Origin = "Origin",
                            pet_OrtherName = "OrtherName",
                            pet_Price = 1.0,
                            pet_Weight = 3.0
                        },
                        new
                        {
                            pet_Id = "54af5965-e4e0-4237-a2d8-4e7a1673c0ec",
                            pet_CategoryId = "56b58303-c5c4-462f-80f2-84f29696ce70",
                            pet_Description = "GOLDEN RETRIEVER",
                            pet_Image1 = "image/giongcho/dobermann.jpg",
                            pet_Image2 = "image/giongcho/dobermann.jpg",
                            pet_Image3 = "image/giongcho/dobermann.jpg",
                            pet_Image4 = "image/giongcho/dobermann.jpg",
                            pet_Image5 = "image/giongcho/dobermann.jpg",
                            pet_IsDelete = false,
                            pet_Lifespan = 1.0,
                            pet_Name = "GOLDEN RETRIEVER",
                            pet_Origin = "GOLDEN RETRIEVER",
                            pet_OrtherName = "GOLDEN RETRIEVER",
                            pet_Price = 1.0,
                            pet_Weight = 3.0
                        },
                        new
                        {
                            pet_Id = "2acdf32f-231e-4887-9d66-fd9be9ba0665",
                            pet_CategoryId = "56b58303-c5c4-462f-80f2-84f29696ce70",
                            pet_Description = "GOLDEN RETRIEVE",
                            pet_Image1 = "image/giongcho/golden-retriever.jpg",
                            pet_Image2 = "image/giongcho/golden-retriever.jpg",
                            pet_Image3 = "image/giongcho/golden-retriever.jpg",
                            pet_Image4 = "image/giongcho/golden-retriever.jpg",
                            pet_Image5 = "image/giongcho/golden-retriever.jpg",
                            pet_IsDelete = false,
                            pet_Lifespan = 1.0,
                            pet_Name = "GOLDEN RETRIEVE",
                            pet_Origin = "GOLDEN RETRIEVE",
                            pet_OrtherName = "GOLDEN RETRIEVE",
                            pet_Price = 1.0,
                            pet_Weight = 3.0
                        },
                        new
                        {
                            pet_Id = "18fd73ba-348e-48fd-ab38-1848474ba98a",
                            pet_CategoryId = "56b58303-c5c4-462f-80f2-84f29696ce70",
                            pet_Description = "GREAT DANE",
                            pet_Image1 = "image/giongcho/golden-retriever.jpg",
                            pet_Image2 = "image/giongcho/golden-retriever.jpg",
                            pet_Image3 = "image/giongcho/golden-retriever.jpg",
                            pet_Image4 = "image/giongcho/golden-retriever.jpg",
                            pet_Image5 = "image/giongcho/golden-retriever.jpg",
                            pet_IsDelete = false,
                            pet_Lifespan = 1.0,
                            pet_Name = "GREAT DANE",
                            pet_Origin = "GREAT DANE",
                            pet_OrtherName = "GREAT DANE",
                            pet_Price = 1.0,
                            pet_Weight = 3.0
                        },
                        new
                        {
                            pet_Id = "e99ca212-b3e6-4aea-8426-0a5ce7575970",
                            pet_CategoryId = "56b58303-c5c4-462f-80f2-84f29696ce70",
                            pet_Description = "GREAT DANE",
                            pet_Image1 = "image/giongcho/great-dane.jpg",
                            pet_Image2 = "image/giongcho/great-dane.jpg",
                            pet_Image3 = "image/giongcho/great-dane.jpg",
                            pet_Image4 = "image/giongcho/great-dane.jpg",
                            pet_Image5 = "image/giongcho/great-dane.jpg",
                            pet_IsDelete = false,
                            pet_Lifespan = 1.0,
                            pet_Name = "GREAT DANE",
                            pet_Origin = "GREAT DANE",
                            pet_OrtherName = "GREAT DANE",
                            pet_Price = 1.0,
                            pet_Weight = 3.0
                        },
                        new
                        {
                            pet_Id = "e2d0e537-d570-4ff1-913d-1b1c86fc62ad",
                            pet_CategoryId = "56b58303-c5c4-462f-80f2-84f29696ce70",
                            pet_Description = "H'Mong Coc",
                            pet_Image1 = "image/giongcho/mong-coc.jpg",
                            pet_Image2 = "image/giongcho/mong-coc.jpg",
                            pet_Image3 = "image/giongcho/mong-coc.jpg",
                            pet_Image4 = "image/giongcho/mong-coc.jpg",
                            pet_Image5 = "image/giongcho/mong-coc.jpg",
                            pet_IsDelete = false,
                            pet_Lifespan = 1.0,
                            pet_Name = "H'Mong Coc",
                            pet_Origin = "H'Mong Coc",
                            pet_OrtherName = "H'Mong Coc",
                            pet_Price = 1.0,
                            pet_Weight = 3.0
                        },
                        new
                        {
                            pet_Id = "8854a6af-905b-4eb6-b3fb-4a76fdc3409b",
                            pet_CategoryId = "56b58303-c5c4-462f-80f2-84f29696ce70",
                            pet_Description = "HUSKY",
                            pet_Image1 = "image/giongcho/husky.jpg",
                            pet_Image2 = "image/giongcho/husky.jpg",
                            pet_Image3 = "image/giongcho/husky.jpg",
                            pet_Image4 = "image/giongcho/husky.jpg",
                            pet_Image5 = "image/giongcho/husky.jpg",
                            pet_IsDelete = false,
                            pet_Lifespan = 1.0,
                            pet_Name = "HUSKY",
                            pet_Origin = "HUSKY",
                            pet_OrtherName = "HUSKY",
                            pet_Price = 1.0,
                            pet_Weight = 3.0
                        },
                        new
                        {
                            pet_Id = "70e57592-a2da-414a-a646-f49bd394a670",
                            pet_CategoryId = "56b58303-c5c4-462f-80f2-84f29696ce70",
                            pet_Description = "BLABRADOR",
                            pet_Image1 = "image/giongcho/labrador.png",
                            pet_Image2 = "image/giongcho/labrador.png",
                            pet_Image3 = "image/giongcho/labrador.png",
                            pet_Image4 = "image/giongcho/labrador.png",
                            pet_Image5 = "image/giongcho/labrador.png",
                            pet_IsDelete = false,
                            pet_Lifespan = 1.0,
                            pet_Name = "BLABRADOR",
                            pet_Origin = "BLABRADOR",
                            pet_OrtherName = "BLABRADOR",
                            pet_Price = 1.0,
                            pet_Weight = 3.0
                        },
                        new
                        {
                            pet_Id = "6e4e38a5-d800-40df-a5fe-c7570d73a2a3",
                            pet_CategoryId = "56b58303-c5c4-462f-80f2-84f29696ce70",
                            pet_Description = "Sausage",
                            pet_Image1 = "image/giongcho/lap-xuong.jpg",
                            pet_Image2 = "image/giongcho/lap-xuong.jpg",
                            pet_Image3 = "image/giongcho/lap-xuong.jpg",
                            pet_Image4 = "image/giongcho/lap-xuong.jpg",
                            pet_Image5 = "image/giongcho/lap-xuong.jpg",
                            pet_IsDelete = false,
                            pet_Lifespan = 1.0,
                            pet_Name = "Sausage",
                            pet_Origin = "Sausage",
                            pet_OrtherName = "Sausage",
                            pet_Price = 1.0,
                            pet_Weight = 3.0
                        },
                        new
                        {
                            pet_Id = "4f152631-848d-4ce8-9033-e951a2f455ff",
                            pet_CategoryId = "56b58303-c5c4-462f-80f2-84f29696ce70",
                            pet_Description = "MALINOIS",
                            pet_Image1 = "image/giongcho/choMalinois.png",
                            pet_Image2 = "image/giongcho/choMalinois.png",
                            pet_Image3 = "image/giongcho/choMalinois.png",
                            pet_Image4 = "image/giongcho/choMalinois.png",
                            pet_Image5 = "image/giongcho/choMalinois.png",
                            pet_IsDelete = false,
                            pet_Lifespan = 1.0,
                            pet_Name = "MALINOIS",
                            pet_Origin = "MALINOIS",
                            pet_OrtherName = "MALINOIS",
                            pet_Price = 1.0,
                            pet_Weight = 3.0
                        },
                        new
                        {
                            pet_Id = "8d662e0e-6b2e-480e-a705-fe6c7cc27622",
                            pet_CategoryId = "56b58303-c5c4-462f-80f2-84f29696ce70",
                            pet_Description = "Tibetan Clams",
                            pet_Image1 = "image/giongcho/ngaottang.jpg",
                            pet_Image2 = "image/giongcho/ngaottang.jpg",
                            pet_Image3 = "image/giongcho/ngaottang.jpg",
                            pet_Image4 = "image/giongcho/ngaottang.jpg",
                            pet_Image5 = "image/giongcho/ngaottang.jpg",
                            pet_IsDelete = false,
                            pet_Lifespan = 1.0,
                            pet_Name = "Tibetan Clams",
                            pet_Origin = "Tibetan Clams",
                            pet_OrtherName = "Tibetan Clams",
                            pet_Price = 1.0,
                            pet_Weight = 3.0
                        },
                        new
                        {
                            pet_Id = "b07208c2-0594-4ee3-ae85-166b1de1d93c",
                            pet_CategoryId = "56b58303-c5c4-462f-80f2-84f29696ce70",
                            pet_Description = "Deer Pug dog",
                            pet_Image1 = "image/giongcho/phoc-huou.jpg",
                            pet_Image2 = "image/giongcho/phoc-huou.jpg",
                            pet_Image3 = "image/giongcho/phoc-huou.jpg",
                            pet_Image4 = "image/giongcho/phoc-huou.jpg",
                            pet_Image5 = "image/giongcho/phoc-huou.jpg",
                            pet_IsDelete = false,
                            pet_Lifespan = 1.0,
                            pet_Name = "Deer Pug dog",
                            pet_Origin = "Deer Pug dog",
                            pet_OrtherName = "Deer Pug dog",
                            pet_Price = 1.0,
                            pet_Weight = 3.0
                        },
                        new
                        {
                            pet_Id = "98739036-a5ac-4a54-9b56-4e401139ae81",
                            pet_CategoryId = "56b58303-c5c4-462f-80f2-84f29696ce70",
                            pet_Description = "Phoc squirrel dog",
                            pet_Image1 = "image/giongcho/phoc-soc.jpg",
                            pet_Image2 = "image/giongcho/phoc-soc.jpg",
                            pet_Image3 = "image/giongcho/phoc-soc.jpg",
                            pet_Image4 = "image/giongcho/phoc-soc.jpg",
                            pet_Image5 = "image/giongcho/phoc-soc.jpg",
                            pet_IsDelete = false,
                            pet_Lifespan = 1.0,
                            pet_Name = "Phoc squirrel dog",
                            pet_Origin = "Phoc squirrel dog",
                            pet_OrtherName = "Phoc squirrel dog",
                            pet_Price = 1.0,
                            pet_Weight = 3.0
                        },
                        new
                        {
                            pet_Id = "7a4f15f3-257a-44ca-9583-f8b9b8edc039",
                            pet_CategoryId = "56b58303-c5c4-462f-80f2-84f29696ce70",
                            pet_Description = "Phu Quoc dogs",
                            pet_Image1 = "image/giongcho/phu-quoc.jpg",
                            pet_Image2 = "image/giongcho/phu-quoc.jpg",
                            pet_Image3 = "image/giongcho/phu-quoc.jpg",
                            pet_Image4 = "image/giongcho/phu-quoc.jpg",
                            pet_Image5 = "image/giongcho/phu-quoc.jpg",
                            pet_IsDelete = false,
                            pet_Lifespan = 1.0,
                            pet_Name = "Phu Quoc dogs",
                            pet_Origin = "Phu Quoc dogs",
                            pet_OrtherName = "Phu Quoc dogs",
                            pet_Price = 1.0,
                            pet_Weight = 3.0
                        },
                        new
                        {
                            pet_Id = "2de53e61-b28d-49f8-bf61-28d1b4e9d010",
                            pet_CategoryId = "56b58303-c5c4-462f-80f2-84f29696ce70",
                            pet_Description = "PITBULL",
                            pet_Image1 = "image/giongcho/pitbull.jpg",
                            pet_Image2 = "image/giongcho/pitbull.jpg",
                            pet_Image3 = "image/giongcho/pitbull.jpg",
                            pet_Image4 = "image/giongcho/pitbull.jpg",
                            pet_Image5 = "image/giongcho/pitbull.jpg",
                            pet_IsDelete = false,
                            pet_Lifespan = 1.0,
                            pet_Name = "PITBULL",
                            pet_Origin = "PITBULL",
                            pet_OrtherName = "PITBULL",
                            pet_Price = 1.0,
                            pet_Weight = 3.0
                        },
                        new
                        {
                            pet_Id = "f7b84a71-d1d5-4ae9-ac17-f3b6980f511e",
                            pet_CategoryId = "56b58303-c5c4-462f-80f2-84f29696ce70",
                            pet_Description = "POODLE",
                            pet_Image1 = "image/giongcho/poodle.jpg",
                            pet_Image2 = "image/giongcho/poodle.jpg",
                            pet_Image3 = "image/giongcho/poodle.jpg",
                            pet_Image4 = "image/giongcho/poodle.jpg",
                            pet_Image5 = "image/giongcho/poodle.jpg",
                            pet_IsDelete = false,
                            pet_Lifespan = 1.0,
                            pet_Name = "POODLE",
                            pet_Origin = "POODLE",
                            pet_OrtherName = "POODLE",
                            pet_Price = 1.0,
                            pet_Weight = 3.0
                        },
                        new
                        {
                            pet_Id = "1ac399d6-9757-4d82-832b-e5a29399274d",
                            pet_CategoryId = "56b58303-c5c4-462f-80f2-84f29696ce70",
                            pet_Description = "PUG",
                            pet_Image1 = "image/giongcho/pub.jpg",
                            pet_Image2 = "image/giongcho/pub.jpg",
                            pet_Image3 = "image/giongcho/pub.jpg",
                            pet_Image4 = "image/giongcho/pub.jpg",
                            pet_Image5 = "image/giongcho/pub.jpg",
                            pet_IsDelete = false,
                            pet_Lifespan = 1.0,
                            pet_Name = "PUG",
                            pet_Origin = "PUG",
                            pet_OrtherName = "PUG",
                            pet_Price = 1.0,
                            pet_Weight = 3.0
                        },
                        new
                        {
                            pet_Id = "160e44f3-705f-4a71-8f53-71f98014c0bb",
                            pet_CategoryId = "56b58303-c5c4-462f-80f2-84f29696ce70",
                            pet_Description = "ROTTWEILER",
                            pet_Image1 = "image/giongcho/rottweiler.jpg",
                            pet_Image2 = "image/giongcho/rottweiler.jpg",
                            pet_Image3 = "image/giongcho/rottweiler.jpg",
                            pet_Image4 = "image/giongcho/rottweiler.jpg",
                            pet_Image5 = "image/giongcho/rottweiler.jpg",
                            pet_IsDelete = false,
                            pet_Lifespan = 1.0,
                            pet_Name = "ROTTWEILER",
                            pet_Origin = "ROTTWEILER",
                            pet_OrtherName = "ROTTWEILER",
                            pet_Price = 1.0,
                            pet_Weight = 3.0
                        },
                        new
                        {
                            pet_Id = "aed45db6-b199-4325-9121-f09e0468bf2e",
                            pet_CategoryId = "56b58303-c5c4-462f-80f2-84f29696ce70",
                            pet_Description = "ROTTWEILER",
                            pet_Image1 = "image/giongcho/rottweiler.jpg",
                            pet_Image2 = "image/giongcho/rottweiler.jpg",
                            pet_Image3 = "image/giongcho/rottweiler.jpg",
                            pet_Image4 = "image/giongcho/rottweiler.jpg",
                            pet_Image5 = "image/giongcho/rottweiler.jpg",
                            pet_IsDelete = false,
                            pet_Lifespan = 1.0,
                            pet_Name = "ROTTWEILER",
                            pet_Origin = "ROTTWEILER",
                            pet_OrtherName = "ROTTWEILER",
                            pet_Price = 1.0,
                            pet_Weight = 3.0
                        },
                        new
                        {
                            pet_Id = "9d57b4c4-d624-4f97-aa53-a0b89753d5fe",
                            pet_CategoryId = "56b58303-c5c4-462f-80f2-84f29696ce70",
                            pet_Description = "SAMOYED",
                            pet_Image1 = "image/giongcho/samoyed.jpg",
                            pet_Image2 = "image/giongcho/samoyed.jpg",
                            pet_Image3 = "image/giongcho/samoyed.jpg",
                            pet_Image4 = "image/giongcho/samoyed.jpg",
                            pet_Image5 = "image/giongcho/samoyed.jpg",
                            pet_IsDelete = false,
                            pet_Lifespan = 1.0,
                            pet_Name = "SAMOYED",
                            pet_Origin = "SAMOYED",
                            pet_OrtherName = "SAMOYED",
                            pet_Price = 1.0,
                            pet_Weight = 3.0
                        },
                        new
                        {
                            pet_Id = "7ffb76aa-7750-497f-8490-35f20d98f606",
                            pet_CategoryId = "56b58303-c5c4-462f-80f2-84f29696ce70",
                            pet_Description = "SHIBA INU",
                            pet_Image1 = "image/giongcho/shiba.jpg",
                            pet_Image2 = "image/giongcho/shiba.jpg",
                            pet_Image3 = "image/giongcho/shiba.jpg",
                            pet_Image4 = "image/giongcho/shiba.jpg",
                            pet_Image5 = "image/giongcho/shiba.jpg",
                            pet_IsDelete = false,
                            pet_Lifespan = 1.0,
                            pet_Name = "SHIBA INU",
                            pet_Origin = "SHIBA INU",
                            pet_OrtherName = "SHIBA INU",
                            pet_Price = 1.0,
                            pet_Weight = 3.0
                        });
                });

            modelBuilder.Entity("Database.Entities.PettInBill", b =>
                {
                    b.Property<string>("pib_PetId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("pib_BillId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("pib_IsDelete")
                        .HasColumnType("bit");

                    b.Property<double>("pib_Price")
                        .HasColumnType("float");

                    b.Property<double>("pib_Quantity")
                        .HasColumnType("float");

                    b.HasKey("pib_PetId", "pib_BillId");

                    b.HasIndex("pib_BillId");

                    b.ToTable("PettInBill", (string)null);
                });

            modelBuilder.Entity("Database.Entities.ProductCategories", b =>
                {
                    b.Property<string>("proc_Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("proc_Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("proc_IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("proc_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("proc_Id");

                    b.ToTable("ProductCategories", (string)null);

                    b.HasData(
                        new
                        {
                            proc_Id = "22fbf9d7-2e58-42af-be4b-b9b3cd2c7e20",
                            proc_Description = "Pet Supplies",
                            proc_IsDelete = false,
                            proc_Name = "Pet Supplies"
                        },
                        new
                        {
                            proc_Id = "5d3f1f23-d2ad-4cdf-b641-d4c6b3844c62",
                            proc_Description = "Pet Food",
                            proc_IsDelete = false,
                            proc_Name = "Pet Food"
                        },
                        new
                        {
                            proc_Id = "fc9e7ba5-1376-4b67-a691-fe28227600cc",
                            proc_Description = "Pet Cage",
                            proc_IsDelete = false,
                            proc_Name = "Pet Cage"
                        },
                        new
                        {
                            proc_Id = "38ff1640-523b-42ba-a40e-4a5e913a14c1",
                            proc_Description = "Pet Toys",
                            proc_IsDelete = false,
                            proc_Name = "Pet Toys"
                        },
                        new
                        {
                            proc_Id = "389cf390-06ff-4d55-b6be-25e6b4e531da",
                            proc_Description = "Beauty Accessories",
                            proc_IsDelete = false,
                            proc_Name = "Beauty Accessories"
                        },
                        new
                        {
                            proc_Id = "a9a81415-ad79-4e0b-a5fe-cb2cd8a52eac",
                            proc_Description = "Pet Clothes",
                            proc_IsDelete = false,
                            proc_Name = "Pet Clothes"
                        },
                        new
                        {
                            proc_Id = "0ba11721-93aa-4de7-800b-4f1b07b5b2cb",
                            proc_Description = "Nutritional Food",
                            proc_IsDelete = false,
                            proc_Name = "Nutritional Food"
                        },
                        new
                        {
                            proc_Id = "f07da8a3-ef83-46b3-a231-6956c98c4e1c",
                            proc_Description = "Medicines & Functional Products",
                            proc_IsDelete = false,
                            proc_Name = "Medicines & Functional Products"
                        });
                });

            modelBuilder.Entity("Database.Entities.ProductInBill", b =>
                {
                    b.Property<string>("proib_ProductId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("proib_BillId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("proib_IsDelete")
                        .HasColumnType("bit");

                    b.Property<double>("proib_Price")
                        .HasColumnType("float");

                    b.Property<double>("proib_Quantity")
                        .HasColumnType("float");

                    b.HasKey("proib_ProductId", "proib_BillId");

                    b.HasIndex("proib_BillId");

                    b.ToTable("ProductInBill", (string)null);
                });

            modelBuilder.Entity("Database.Entities.Products", b =>
                {
                    b.Property<string>("product_Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("product_CategoryId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("product_Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("product_Image1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("product_Image2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("product_Image3")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("product_Image4")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("product_Image5")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("product_IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("product_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("product_Price")
                        .HasColumnType("float");

                    b.Property<double>("product_Rate")
                        .HasColumnType("float");

                    b.Property<double>("product_ReProducePrice")
                        .HasColumnType("float");

                    b.HasKey("product_Id");

                    b.HasIndex("product_CategoryId");

                    b.ToTable("Products", (string)null);
                });

            modelBuilder.Entity("Database.Entities.UserContact", b =>
                {
                    b.Property<string>("uc_Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("uc_Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("uc_Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("uc_IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("uc_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("uc_Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("uc_UserCreate")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("uc_Id");

                    b.HasIndex("uc_UserCreate");

                    b.ToTable("UserContact", (string)null);

                    b.HasData(
                        new
                        {
                            uc_Id = "824a996b-08a2-492f-b322-fbabecec9fe5",
                            uc_Content = "Content",
                            uc_Email = "Email",
                            uc_IsDelete = false,
                            uc_Name = "Name",
                            uc_Phone = "Phone",
                            uc_UserCreate = "8b3e6a69-6154-4a41-98c8-327dbfbf5ef8"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("Roles", (string)null);

                    b.HasDiscriminator<string>("Discriminator").HasValue("IdentityRole");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("RoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("Users", (string)null);

                    b.HasDiscriminator<string>("Discriminator").HasValue("IdentityUser");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("UserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = "8b3e6a69-6154-4a41-98c8-327dbfbf5ef8",
                            RoleId = "370047eb-dbf2-4313-9d66-ce4ce1cd2e2f"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("UserTokens", (string)null);
                });

            modelBuilder.Entity("Database.Entities.Roles", b =>
                {
                    b.HasBaseType("Microsoft.AspNetCore.Identity.IdentityRole");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isDelete")
                        .HasColumnType("bit");

                    b.ToTable("Roles");

                    b.HasDiscriminator().HasValue("Roles");

                    b.HasData(
                        new
                        {
                            Id = "370047eb-dbf2-4313-9d66-ce4ce1cd2e2f",
                            ConcurrencyStamp = "a85e4994-7ddb-4c50-b750-26d6c1bece19",
                            Name = "ADMIN",
                            NormalizedName = "Admin",
                            Description = "admin",
                            isDelete = false
                        });
                });

            modelBuilder.Entity("Database.Entities.Users", b =>
                {
                    b.HasBaseType("Microsoft.AspNetCore.Identity.IdentityUser");

                    b.Property<DateTime>("DoB")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isDelete")
                        .HasColumnType("bit");

                    b.ToTable("Users");

                    b.HasDiscriminator().HasValue("Users");

                    b.HasData(
                        new
                        {
                            Id = "8b3e6a69-6154-4a41-98c8-327dbfbf5ef8",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "cd7841fe-ce21-4cf3-9afb-410c75a3ff53",
                            Email = "admin@gmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "ADMIN@GMAIL.COM",
                            NormalizedUserName = "ADMIN@GMAIL.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEEKQpZiSSZVMhWKO5cwv2r7xLhkE2rS26JoNstoamC1xyGS/Gj6/oej45pcQVu2kjQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "16e07cf9-b330-458d-abb9-84ca11a1d132",
                            TwoFactorEnabled = false,
                            UserName = "Admin",
                            DoB = new DateTime(2022, 10, 23, 0, 56, 3, 900, DateTimeKind.Local).AddTicks(3365),
                            FirstName = "FirstName",
                            LastName = "LastName",
                            isDelete = false
                        });
                });

            modelBuilder.Entity("Database.Entities.Bills", b =>
                {
                    b.HasOne("Database.Entities.Users", "Users")
                        .WithMany("bills")
                        .HasForeignKey("bill_UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Users");
                });

            modelBuilder.Entity("Database.Entities.IntroducePage", b =>
                {
                    b.HasOne("Database.Entities.Users", "users")
                        .WithMany("introducePage")
                        .HasForeignKey("introduce_UserCreate")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("users");
                });

            modelBuilder.Entity("Database.Entities.Pets", b =>
                {
                    b.HasOne("Database.Entities.PetCategories", "petCategories")
                        .WithMany("pets")
                        .HasForeignKey("pet_CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("petCategories");
                });

            modelBuilder.Entity("Database.Entities.PettInBill", b =>
                {
                    b.HasOne("Database.Entities.Bills", "bills")
                        .WithMany("pettInBill")
                        .HasForeignKey("pib_BillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Database.Entities.Pets", "pets")
                        .WithMany("pettInBill")
                        .HasForeignKey("pib_PetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("bills");

                    b.Navigation("pets");
                });

            modelBuilder.Entity("Database.Entities.ProductInBill", b =>
                {
                    b.HasOne("Database.Entities.Bills", "bills")
                        .WithMany("productInBill")
                        .HasForeignKey("proib_BillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Database.Entities.Products", "products")
                        .WithMany("productInBill")
                        .HasForeignKey("proib_ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("bills");

                    b.Navigation("products");
                });

            modelBuilder.Entity("Database.Entities.Products", b =>
                {
                    b.HasOne("Database.Entities.ProductCategories", "productCategories")
                        .WithMany("products")
                        .HasForeignKey("product_CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("productCategories");
                });

            modelBuilder.Entity("Database.Entities.UserContact", b =>
                {
                    b.HasOne("Database.Entities.Users", "users")
                        .WithMany("userContact")
                        .HasForeignKey("uc_UserCreate")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("users");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Database.Entities.Bills", b =>
                {
                    b.Navigation("pettInBill");

                    b.Navigation("productInBill");
                });

            modelBuilder.Entity("Database.Entities.PetCategories", b =>
                {
                    b.Navigation("pets");
                });

            modelBuilder.Entity("Database.Entities.Pets", b =>
                {
                    b.Navigation("pettInBill");
                });

            modelBuilder.Entity("Database.Entities.ProductCategories", b =>
                {
                    b.Navigation("products");
                });

            modelBuilder.Entity("Database.Entities.Products", b =>
                {
                    b.Navigation("productInBill");
                });

            modelBuilder.Entity("Database.Entities.Users", b =>
                {
                    b.Navigation("bills");

                    b.Navigation("introducePage");

                    b.Navigation("userContact");
                });
#pragma warning restore 612, 618
        }
    }
}
